<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yjj.building.mapper.SysBuildingMapper">
    
    <resultMap type="SysBuilding" id="SysBuildingResult">
        <result property="buildingId"    column="building_id"    />
        <result property="buildingCode"    column="building_code"    />
        <result property="buildingName"    column="building_name"    />
        <result property="buildingSort"    column="building_sort"    />
        <result property="status"    column="status"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectSysBuildingVo">
        select building_id, building_code, building_name, building_sort, status, create_by, create_time, update_by, update_time, remark from sys_building
    </sql>

    <select id="selectSysBuildingList" parameterType="SysBuilding" resultMap="SysBuildingResult">
        <include refid="selectSysBuildingVo"/>
        <where>  
            <if test="buildingCode != null  and buildingCode != ''"> and building_code = #{buildingCode}</if>
            <if test="buildingName != null  and buildingName != ''"> and building_name like concat('%', #{buildingName}, '%')</if>
            <if test="buildingSort != null "> and building_sort = #{buildingSort}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
        </where>
    </select>
    
    <select id="selectSysBuildingByBuildingId" parameterType="Long" resultMap="SysBuildingResult">
        <include refid="selectSysBuildingVo"/>
        where building_id = #{buildingId}
    </select>
        
    <insert id="insertSysBuilding" parameterType="SysBuilding" useGeneratedKeys="true" keyProperty="buildingId">
        insert into sys_building
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="buildingCode != null and buildingCode != ''">building_code,</if>
            <if test="buildingName != null and buildingName != ''">building_name,</if>
            <if test="buildingSort != null">building_sort,</if>
            <if test="status != null and status != ''">status,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="buildingCode != null and buildingCode != ''">#{buildingCode},</if>
            <if test="buildingName != null and buildingName != ''">#{buildingName},</if>
            <if test="buildingSort != null">#{buildingSort},</if>
            <if test="status != null and status != ''">#{status},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateSysBuilding" parameterType="SysBuilding">
        update sys_building
        <trim prefix="SET" suffixOverrides=",">
            <if test="buildingCode != null and buildingCode != ''">building_code = #{buildingCode},</if>
            <if test="buildingName != null and buildingName != ''">building_name = #{buildingName},</if>
            <if test="buildingSort != null">building_sort = #{buildingSort},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where building_id = #{buildingId}
    </update>

    <delete id="deleteSysBuildingByBuildingId" parameterType="Long">
        delete from sys_building where building_id = #{buildingId}
    </delete>

    <delete id="deleteSysBuildingByBuildingIds" parameterType="String">
        delete from sys_building where building_id in 
        <foreach item="buildingId" collection="array" open="(" separator="," close=")">
            #{buildingId}
        </foreach>
    </delete>
</mapper>